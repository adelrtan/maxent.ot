% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimize.R
\name{optimize_weights}
\alias{optimize_weights}
\title{Optimize maxent OT constraint weights}
\usage{
optimize_weights(
  input_file,
  bias_file = NA,
  mu_scalar = NA,
  mu_vector = NA,
  sigma_scalar = NA,
  sigma_vector = NA,
  input_format = "otsoft",
  in_sep = "\\t",
  control_params = NA,
  upper_bound = 100
)
}
\arguments{
\item{input_file}{The path to the input data file. This file contains one or
more OT tableaux consisting of mappings between underlying and surface
forms with observed frequency and violation profiles. Constraint
violations must be numeric.}

\item{bias_file}{(optional) The path to the file containing mus and sigma
for constraint biases. If this argument is provided, the scalar and vector
mu and sigma arguments will be ignored.}

\item{mu_scalar}{(optional) A single scalar value that will serve as the mu
for each constraint in the bias term. Constraint weights will also be
initialized to this value. This value will not be used if either
\code{bias_file} or \code{mu_vector} are provided.}

\item{mu_vector}{(optional) A vector of mus for each constraint in the bias
term. The length of this vector must equal the number of constraints in
the input file. If \code{bias_file} is provided, this argument will be
ignored. If this argument is provided, \code{mu_scalar} will be ignored.}

\item{sigma_scalar}{(optional) A single scalar value that will serve as the
sigma for each constraint in the bias term. This value will not be used if
either \code{bias_file} or \code{sigma_vector} are provided.}

\item{sigma_vector}{(optional) A vector of sigmas for each constraint in the
bias term. The length of this vector must equal the number of constraints
in the input file. If \code{bias_file} is provided, this argument will be ignored.
If this argument is provided, \code{sigma_scalar} will be ignored.}

\item{input_format}{(optional) A string specifying the format of the input
files. Currently only OTSoft-style formatting is supported.}

\item{in_sep}{(optional) The delimiter used in the input files. Defaults to
tabs.}

\item{control_params}{(optional) A named list of control parameters that
will be passed to the \code{optim} function. See documentation of that function
for details. Note that some parameter settings may interfere with
optimization. The parameter \code{fnscale} will be overwritten to \code{-1} if
specified, since this must be treated as a maximization problem.}

\item{upper_bound}{(optional) The maximum value for constraint weights.}
}
\value{
An object with the following named attributes:
* \code{weights}: the optimal constraint weights
* \code{log_lik}: the log likelihood of the data under the discovered
weights
* \code{k}: the number of constraints
* \code{n}: the number of data points in the training set
}
\description{
Optimizes constraint weights given a data set and optional biases. If no
bias arguments are provided, the bias term will not be included in the
optimization.
}
\details{
By default, this function optimizes the log likelihood of the training data
by changing the values of \eqn{w}, the vector of constraint weights. The log
likelihood of the training data is

\deqn{LL_w(D) = \sum_{i=1}^{n}{\ln L_w(x)}
- \sum_{k=1}^{m}{\frac{(w_k - \mu_k)^2}{2\sigma_k^2}}}

where \eqn{w_k} is the weight of constraint \eqn{k}, and \eqn{\mu_k} and
\eqn{\sigma_k} parameterize a normal distribution that serves as a
prior bias for \eqn{w_k}.

\eqn{L_(x)} is the likelihood of a single tableau whose input is the
underlying form \eqn{x}. \eqn{L_(x)} is defined as

\deqn{L_w(x) = \prod_{y\in \mathcal{Y}(x)}{\nu(y)P(y|x; w)}}

where \eqn{\mathcal{Y}(x)} is the set of observed surface realizations of
\eqn{x}, \eqn{\nu(y)} is the number of observed tokens of surface form
\eqn{y}, and \eqn{P(y|x; w)} is the probability of realizing underlying
\eqn{x} as surface \eqn{y} given the constraint weighting \eqn{w}. This
probability is defined as

\deqn{P(y|x; w) = \frac{1}{Z_w(x)}\exp(\sum_{k=1}^{m}{w_k f_k(y, x)})}

where \eqn{f_k(y, x)} is the number of violatons of constraint \eqn{k}
incurred by mapping underlying \eqn{x} to surface \eqn{y}, and \eqn{Z(x)}
is a normalization term defined as

\deqn{Z(x) = \sum_{y\in \mathcal{Y}(x)}{\exp(\sum_{k=1}^{m}{w_k f_k(y, x)})}}

Optimization is done using the \code{optim} function from the R-core statistics
library. By default it uses \code{L-BFGS-B} optimization, which is a quasi-Newton
method that allows upper and lower bounds on variables. Constraint weights
are restricted to finite, non-negative values.

If no bias parameters are specified (either the \code{bias_file} argument or some
combination of the scalar/vector mu/sigma parameters), optimization will be
done without the bias term.
}
